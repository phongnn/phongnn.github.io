---
import ThemeToggle from "./ThemeToggle.astro";

export type Props = {
	withNav: boolean;
};

const { withNav } = Astro.props as Props;
const url = new URL(Astro.request.url);
---

<script>
	import { toggleClass } from "@/util";

	document.addEventListener("DOMContentLoaded", () => {
		let menuOpen = false;
		const toggleMenuButton = document.getElementById("toggle-navigation-menu");
		const navMenu = document.getElementById("navigation-menu");

		const toggleMenu = () => {
			menuOpen = !menuOpen;
			toggleClass(document.body, "menu-open");
			toggleClass(toggleMenuButton, "text-accent");
			toggleMenuButton.setAttribute("aria-expanded", menuOpen.toString());
		};

		const handleMenuClick = (evt) => {
			if (menuOpen && evt.target["tagName"] === "A") {
				toggleMenu();
			}
		};

		if (toggleMenuButton) {
			toggleMenuButton.addEventListener("click", toggleMenu);
		}
		if (navMenu) {
			navMenu.addEventListener("click", handleMenuClick);
		}
	});
</script>

<header>
	<span>
		<a
			href="/"
			class="logo"
			aria-current={url.pathname === "/" ? "page" : false}
		>
			<span>Phong Nguyen</span>
		</a>
		{
			withNav && (
				<nav id="navigation-menu" aria-label="Navigation Menu">
					<a href="#articles">Articles</a>
					<a href="#code">Code</a>
					<a href="#about">About</a>
				</nav>
			)
		}
	</span>
	<ThemeToggle />
	{
		withNav && (
			<button
				id="toggle-navigation-menu"
				type="button"
				aria-label="primary navigation"
				aria-expanded="false"
			>
				<svg
					fill="currentColor"
					viewBox="0 0 20 20"
					xmlns="http://www.w3.org/2000/svg"
				>
					<path
						fill-rule="evenodd"
						d="M3 7a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zM3 13a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1z"
						clip-rule="evenodd"
					/>
				</svg>
			</button>
		)
	}
</header>

<style>
	header {
		@apply relative z-50 mb-28 flex items-center;

		.logo {
			@apply inline-flex items-center grayscale hover:filter-none sm:relative sm:inline-block;

			> span {
				@apply text-xl font-bold sm:text-2xl;
			}
		}

		#toggle-navigation-menu {
			@apply ml-8 sm:invisible sm:hidden;

			svg {
				@apply h-6 w-6;
			}
		}

		nav {
			@apply mt-1 -ml-4 hidden text-accent sm:flex sm:divide-x sm:divide-dashed sm:divide-accent;

			a {
				@apply px-4 sm:hover:underline;
			}
		}

		@media (max-width: 640px) {
			:global(body.menu-open) & {
				@apply relative z-50;

				nav {
					@apply absolute -inset-x-4 top-14 m-0 flex flex-col items-end gap-y-4 rounded-md bg-[color:var(--theme-menu-bg)] py-4 shadow backdrop-blur backdrop-filter;

					a {
						@apply p-4;
					}
				}
			}
		}
	}
</style>
